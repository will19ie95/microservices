worker_processes  auto;  ## Default: 1
pid /run/nginx.pid;
error_log  /var/log/nginx/error.log;

events {
  worker_connections  1024;  ## Default: 1024
}

http {

  # Basic Settings 
  charset uft-8;
  sendfile on;

  # Timeout Settings
  keepalive_timeout 900;
  send_timeout 10;

  add_header X-Frame-Options SAMEORIGIN;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  # root  /var/www/html;
  # index index.html;
  access_log /var/log/nginx/access.log main;

  # microservices
  upstream user_service {
    # ip_hash;
    # load balance based on connections
    least_conn;
    # server 130.245.168.171:3000;
    # server 130.245.168.171:3001;
    server 192.168.1.12:3000;
    server 192.168.1.12:3001;
  }

  upstream item_service {
    # ip_hash;
    # load balance based on connections
    least_conn;
    # server 130.245.168.108:3000;
    # server 130.245.168.108:3001;
    server 192.168.1.13:3000;
    server 192.168.1.13:3001;
  }

  # upstream media_service {
    # ip_hash;
    # load balance based on connections
    # least_conn;
    # server http://130.245.168.171:3000;
    # server http://130.245.168.171:3001;
  # }

  server { # simple reverse-proxy

    include    /etc/nginx/mime.types;
    include    /etc/nginx/proxy.conf;

    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
    server_name  130.245.170.91;

    location / {
      root            /var/www/angular/dist;
      try_files $uri $uri/ /index.html;
      proxy_pass      http://127.0.0.1:8080/; # proxy to angular app

      error_log /var/log/nginx/angular4_error.log;
		  access_log /var/log/nginx/angular4_access.log;
    }

    # USER Microservice
    # multiple location match with regex for each
    location ~ ^/(user|follow|adduser|verify) {
      root            /var/www/user_service/html;
      error_log       /var/log/nginx/user_error.log;
      access_log      /var/log/nginx/user_access.log main;
      # proxy settings
      proxy_pass      http://user_service;
    }

    # # ITEM Microservice
    location ~ ^/(item|search|additem) {
      root            /var/www/item_service/html;
      error_log       /var/log/nginx/item_error.log;
      access_log      /var/log/nginx/item_access.log main;
      # proxy settings
      proxy_pass      http://item_service;
    }

    # # MEDIA Microservice
    # location ~ ^/(addmedia|getmedia) {
    #   root            /var/www/media_service/html;
    #   error_log       /var/log/nginx/media.error.log;
    #   access_log      /var/log/nginx/media.access.log main;
    #   # proxy settings
    #   proxy_pass      http://media_service;
    #   try_files $uri index.html =404;
    # }

  }

}